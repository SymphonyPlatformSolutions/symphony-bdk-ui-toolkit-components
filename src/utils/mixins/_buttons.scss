/* Define color on current text and eventual font icons */
@mixin addFontIconColor($fontColor) {
  // Icon styling selector takes precendence over the button colors
  &,
  i {
    color: $fontColor;
  }
}
@mixin addIconSize($size) {
  &,
  i {
    font-size: toRem($size);
  }
}

/* Applies color styles to filled buttons, buttons that do not have borders */
@mixin styleFilledButton($colorMap) {
  background-color: map-get($colorMap, default);
  @include addFontIconColor(map-get($colorMap, text));
  &:hover {
    background-color: map-get($colorMap, hover);
    color: map-get($colorMap, hoverText);
  }
  &:active {
    background-color: map-get($colorMap, active);
    @include addFontIconColor(map-get($colorMap, activeText));
  }
  &:disabled {
    background-color: map-get($colorMap, disabled);
    @include addFontIconColor(map-get($colorMap, textDisabled));
  }
  &.loading {
    min-width: toRem(79);
    background-color: map-get($colorMap, default);
    @include addFontIconColor(map-get($colorMap, text));
  }
}

/* Applies color styles to outline buttons, buttons that do not have a background */
@mixin styleOutlinedButton($colorMap) {
  background-color: transparent;
  @include addBorder(toRem(2), map-get($colorMap, default));
  @include addFontIconColor(map-get($colorMap, default));
  &:hover {
    background-color: map-get($colorMap, hover);
    color: map-get($colorMap, hoverText);
    @include addFontIconColor(map-get($colorMap, hoverText));
    @include addBorder(toRem(2), map-get($colorMap, hoverText));
  }
  &:active {
    background-color: map-get($colorMap, active);
    @include addBorder(toRem(2), map-get($colorMap, activeText));
    color: map-get($colorMap, activeText);
    @include addFontIconColor(map-get($colorMap, activeText));
  }
  &:disabled {
    background-color: transparent;
    @include addBorder(toRem(2), map-get($colorMap, disabled));
    @include addFontIconColor(map-get($colorMap, textDisabled));
    color: map-get($colorMap, textDisabled);
  }
  &.loading {
    background-color: transparent;
    @include addBorder(toRem(2), map-get($colorMap, text));
    @include addFontIconColor(map-get($colorMap, text));
  }
}
